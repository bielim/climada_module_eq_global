function plot_gutenberg_richter(eq_data) 
% plot a Gutenberg Richter curve
% MODULE
% eq_global
% NAME:
%   plot_gutenberg_richter
% PURPOSE:
%   produces a plot showing the relationship between the
%   magnitude and total number of earthquakes of at least that 
%   magnitude 
%   see http://en.wikipedia.org/wiki/Gutenberg%E2%80%93Richter_law 
%   for some background
% CALLING SEQUENCE:
%   plot_gutenberg_richter(eq_data)
% EXAMPLE:
%   eq_data = eq_isc_gem_read   % read historic earthquakes 
%   eq_data_prob = eq_global_probabilistic(eq_data) % create probabilistic event set
%   plot_gutenberg_richter(eq_data_prob)
% COMMENT:
%   eq_data can be a historic data set directly generated by eq_isc_gem_read 
%   or a set of probabilistic events generated based on the historic data 
%   using eq_global_probabilistic
% INPUT:
%   eq_data, a structure with
%       yyyy(line_i): year
%       mm(line_i)  : month
%       dd(line_i)  : day
%       hr(line_i)  : origin hour
%       min(line_i) : origin min
%       sec(line_i) : origin sec
%       glat(line_i): geographic latitude
%       glon(line_i): geographic longitude
%       dep(line_i) : focal depth
%       mag(line_i) : magnitude
%
% OUTPUT:
%   A plot showing the relationship between earthquake magnitude (mag) and 
%   its relative occurrence (N/N_tot, where N is the number
%   of events having a magnitude >=mag and N_tot is the total number of
%   earthquakes in eq_data). The plot also shows a power law fit to the 
%   input data, of form N/N_tot = 10^(a-b*mag). The parameter b, which is 
%   commonly close to 1.0 in seismically active regions, can be used as a
%   first check whether the input data fits empirical relations between
%   earthquake magnitude and occurrence frequency
%
% MODIFICATION HISTORY:
% Melanie Bieli, melanie.bieli@bluewin.ch, 20141119, initial
%-

% Initialize variables
mag_index = 1;
number_of_eq_bigger_than_mag = [];

% create mag_vector, a 1x100 vector going from the minimum to the maximum 
% magnitude in eq_data (equally spaced)  
mag_vector = linspace(min(eq_data.mag), max(eq_data.mag), 100);

% loop through mag_vector and determine for each magnitude the number of 
% earthquakes that exceed that magnitude
for i = 1:100
    number_of_eq_bigger_than_mag(i) = sum(eq_data.mag >= mag_vector(i));
    mag_index = mag_index+1;
end

% Fit a power law to the data
% Gutenberg-Richter: log10(N) = a - b*M
p = polyfit(mag_vector,log10(number_of_eq_bigger_than_mag),1);
b = p(1);
a = p(2);
power_law_fit = (10.^(a + b*mag_vector))/length(eq_data.mag);

% Normalize with total number of occurrences to get the relative occurrence
% N/N_tot
number_of_eq_bigger_than_mag = number_of_eq_bigger_than_mag/length(eq_data.mag);

% Plot the relative occurrence of earthquake magnitudes together with the
% fitted power law curve 
h = plot(mag_vector, number_of_eq_bigger_than_mag, 'b', mag_vector,power_law_fit, 'r');
set(h,'LineWidth',1.5)
axis([min(eq_data.mag), max(eq_data.mag),0,1]);
xlabel('Magnitude (Richter)');
ylabel('Occurrences (N/N_{tot})');
title('Gutenberg-Richter law');
power_law_string = sprintf('power law fit (logN = a-b*mag, a=%0.2f, b=%0.2f)', a,-b);
legend('probabilistic data',power_law_string);
        